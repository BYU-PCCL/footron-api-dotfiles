server {

        root /var/www/{{ production_url }}/html;

        server_name {{ production_url }} www.{{ production_url }};

        location / {
                try_files $uri $uri/ /index.html =404;
        }

        location /api {
                proxy_pass              http://localhost:8000/api;
                proxy_set_header        Host $host;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Proto https;
                proxy_redirect  http://127.0.0.1:8000/api https://{{ production_url }};
        }

	location /api/qr {
                proxy_pass              http://localhost:8000/api/qr;
                proxy_set_header        Host $host;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Proto https;
                proxy_redirect  http://127.0.0.1:8000/api https://{{ staging_url }};
		allow                   {{ internal_whitelist_host }};
		deny                    all;
	}

        location /messaging {
                proxy_pass              http://localhost:8000/messaging;
                proxy_set_header        Upgrade $http_upgrade;
                proxy_set_header        Connection "Upgrade";
                proxy_set_header        Host $host;
                proxy_redirect	http://127.0.0.1:8000/messaging https://{{ production_url }};
	}

        location /messaging/out {
                proxy_pass              http://localhost:8000/messaging/out;
                proxy_set_header        Upgrade $http_upgrade;
                proxy_set_header        Connection "Upgrade";
                proxy_set_header        Host $host;
                proxy_redirect	http://127.0.0.1:8000/messaging https://{{ staging_url }};

		allow                   {{ internal_whitelist_host }};
		deny                    all;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ production_url }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ production_url }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.{{ production_url }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = {{ production_url }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name {{ production_url }} www.{{ production_url }};
    return 404; # managed by Certbot




}
